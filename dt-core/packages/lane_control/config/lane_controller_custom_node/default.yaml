# Configuration for lane following controller

# ======= GENERAL PARAMETERS =======

v_bar: 0.18        # Base speed of the robot. Increasing this makes it move faster.
k_d: -4.5          # Gain for lateral position correction (should be <= 0).
k_theta: -6.25     # Gain for heading correction (should be <= 0).
k_Id: -0.5         # Integral gain for lateral position correction (should be <= 0). Helps reduce steady-state error.
k_Iphi: 0.0        # Integral gain for heading correction (should be <= 0). Usually kept at 0 to avoid overcorrection.

theta_thres_max: 1.0  # Maximum threshold for heading error correction.
theta_thres_min: -0.8 # Minimum threshold for heading error correction.
d_thres: 0.2615       # Threshold for lateral position correction.
d_offset: 0.0         # Offset for lateral position (can be used to adjust desired lane position).

deriv_type: "value"   # Type of derivative computation (can affect control response).
use_LEDs: true        # Whether to use LEDs for visual debugging.

omega_ff: 0.15        # Feedforward angular velocity (helps anticipate turns).

# ======= INTEGRAL BOUNDS =======
# Limits on integral correction terms to prevent excessive accumulation.

integral_bounds:
  d:
    top: 0.3          # Upper bound for lateral integral correction.
    bot: -0.3         # Lower bound for lateral integral correction.
  phi:
    top: 1.2          # Upper bound for heading integral correction.
    bot: -1.2         # Lower bound for heading integral correction.

# ======= RESOLUTION SETTINGS =======
d_resolution: 0.011    # Resolution for lateral position control.
phi_resolution: 0.051  # Resolution for heading control.

# ======= STOP LINE SLOWDOWN =======
# Defines how the robot slows down when approaching a stop line.

stop_line_slowdown:
  start: 0.6          # Distance from stop line where slowing starts.
  end: 0.15           # Distance where the robot reaches its minimum speed.

verbose: 0            # Debugging verbosity level (0 = minimal output, 2 = maximal output).

# ======= TURNING PARAMETERS =======
# Predefined turning speeds and durations for different maneuvers.
#     v: Speed
#     omega: Angular velocity (how fast the bot turns)
#     secs: Duration time #TODO Replace with distance-based approach

# LEFT TURN
l_turn_v: 0.25
l_turn_omega: 2       # (must be > 0)
l_turn_secs: 1.85

# RIGHT TURN
r_turn_v: 0.25
r_turn_omega: -4.75   # (must be < 0)
r_turn_secs: 0.8

# STRAIGHT MOVEMENT (not use by default)
s_turn_v: 0.22
s_turn_omega: 0.0     # (must be = 0)
s_turn_secs: 4 

